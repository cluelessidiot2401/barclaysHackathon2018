package com.diligents.controller;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.diligents.model.barclaysUsers.UserInfo;
import com.diligents.model.barclaysUsers.UserInfo;

@Controller
public class UsersController {
	
	@RequestMapping(value = "/login")
	public String Login() {
//		if(userinfo == null) {
//			System.out.println("Its null man!");
//		}
//		System.out.println("username = " + userinfo.getUserName());
//		System.out.println("passwd = " + userinfo.getPasswd());
		System.out.println("login is where it goes");
		return "login";
	}
	
	@RequestMapping(value = "/loginProcess", method = RequestMethod.POST)
	public String loginProcess(@ModelAttribute("login") Login userInfo, Model model,
			HttpSession session) {
//		ModelAndView reg = null;
		System.out.println(userInfo.getDob());
		if (userInfo.getEmailId().equals("") && userInfo.equals("")) {
			System.out.println("redirected due to binding errors");
//			reg = new ModelAndView("redirect:login.html");
			return "redirect:login.html";
//			return reg;
		}
		System.out.println("username = " + userInfo.getUserName());
		System.out.println("passwd = " + userInfo.getPasswd());
		userInfo = usersService.validateLogin(userInfo);
		if (userInfo == null) {
			System.out.println("redirected due to login issues");
//			reg = new ModelAndView("redirect:login.html");
//			return reg;
			return "redirect:login.html";
		}
		
//		reg = new ModelAndView(new RedirectView("user_page.html"));
//		reg.addObject("userInfo", userInfo);
//		reg.addObject("idealConditions", new IdealConditions());
		System.out.println("exiting from loginProcess post");
//		return reg;
		model.addAttribute("userInfo", userInfo);
		session.setAttribute("uid", userInfo.getUid());
		session.setMaxInactiveInterval(600);
		return "forward:user_page.html";

	}
	
	@RequestMapping(value = "/registerProcess", method = RequestMethod.POST)
	public String registerProcess(@Valid @ModelAttribute("userInfo") UserInfo userInfo,
			BindingResult result, Model model) {
//		ModelAndView reg = null;
		System.out.println(userInfo.getDob());
		if (result.hasErrors()) {
			System.out.println("redirected due to binding errors");
//			reg = new ModelAndView("redirect:login.html");
			return "redirect:login.html";
//			return reg;
		}
		userInfo = usersService.register(userInfo);
		if (userInfo == null) {
			System.out.println("redirected due to some other error");
//			reg = new ModelAndView("redirect:login.html");
			return "redirect:login.html";
//			return reg;
		}
		
		model.addAttribute("userInfo", userInfo);
		return "forward:user_page.html";
		
//		reg = new ModelAndView(new RedirectView("user_page.html"));
//		reg.addObject("userInfo", userInfo);
//		reg.addObject("idealConditions", new IdealConditions());
//		return reg;

	}


	
}
